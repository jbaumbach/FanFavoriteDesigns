using System;
using System.Collections.Generic;
using System.Text;
using System.Windows;
using System.Windows.Forms;
using System.IO;
using Ffd.Common;

namespace Ffd.App.Core
{
    public class LogFile
    {
        private string _logFileName = string.Empty;
        private string _logFilePath = string.Empty;
        private bool _useDateInFName = true;
        private bool _formatWithTime = true;

        /// <summary>
        /// Logfile name, autogenerated as it's requested.
        /// </summary>
        public string LogFileName
        {
            get 
            {
                string exeFilename = System.IO.Path.GetFileNameWithoutExtension(Application.ExecutablePath);
                return string.Format("{0}-log{1}.txt", exeFilename, _useDateInFName ? string.Format("-{0:yyyy-MM-dd}", DateTime.Now) : "");

                // return _logFileName; 
            }
            // set { _logFileName = value; }
        }

        public string LogFilePath
        {
            get { return _logFilePath; }
            set { _logFilePath = value; }
        }

        public bool UseDateInFName
        {
            get { return _useDateInFName; }
            set { _useDateInFName = value; }
        }

        /// <summary>
        /// Set to false to turn off formatting each message that's logged with the time prepended.  By default it's on.
        /// </summary>
        public bool FormatWithTime
        {
            get { return _formatWithTime; }
            set { _formatWithTime = value; }
        }

        public static string FormatMsgWithTime(string msg)
        {
            return string.Format("{0}  {1}\r\n", DateTime.Now, msg);
        }

        public void SetLogfilePathToDesktop()
        {
            _logFilePath = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory);
        }

        /// <summary>
        /// Constructor.
        /// </summary>
        public LogFile()
        {
            // todo: set file to name of exe plus .txt
            _logFilePath = Application.StartupPath;
        }

        public void Log(string message)
        {
            string fileName = Functions.BuildFilenameFromElements(_logFilePath, LogFileName);

            if (_formatWithTime)
            {
                message = FormatMsgWithTime(message);
            }

            Functions.WriteStringAsFile(message, fileName, true);
        }
    }
}
