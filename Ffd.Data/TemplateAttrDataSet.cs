using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;

namespace Ffd.Data
{
    public class TemplateAttrDataSet : AttributeTableDataSet
    {
        /// <summary>
        /// All possible code-table values.  Auto-generated by "TypeGen.exe"
        /// </summary>
        public enum TemplateAttrTypeCode
        {
            tatcNameBoundingBoxRect = 1,
            tatcNumberBoundingBoxRect = 2,
            tatcManualPosAdjsNameFontHeight = 3,
            tatcManualPosAdjsNameFontVerticalPosition = 4,
            tatcNameFontName = 5,
            tatcNumberFontName = 6,
            tatcTemplateGraphicBMP300DPI = 7,
            tatcTemplateGraphicAIV8 = 8,
            tatcMSRP = 9,
            tatcDimensionsDescription = 10,
            tatcManualPosAdjsNumberFontHeight = 11,
            tatcManualPosAdjsNumberFontVertPosition = 12,
            tatcCuttingSetupWidthIn = 13,
            tatcCuttingSetupHeightIn = 14,
            tatcVinylSheetWidthIn = 15,
            tatcVinylSheetLengthIn = 16,
            tatcEbayCategory = 17,
            tatcNameNoUnitHeightIn = 18
        }

        /// <summary>
        /// Returns a Rectangle filled with the desired values from the database.
        /// </summary>
        /// <param name="boundingBoxRect">The code value of a row that has the data.</param>
        /// <returns>Rectangle with our data.</returns>
        public Rectangle GetGraphicRect(TemplateAttrTypeCode boundingBoxRect)
        {
            string rawData = GetValueFromRowSet((int)boundingBoxRect).ToString();
            string[] dimensionValues = rawData.Split(',');

            return new Rectangle(int.Parse(dimensionValues[0]), int.Parse(dimensionValues[1]), int.Parse(dimensionValues[2]), int.Parse(dimensionValues[3]));
        }

        /// <summary>
        /// Returns a ManualPositionAdjustments with the desired values from the database.
        /// </summary>
        /// <param name="boundingBoxType">The code value of a row that has the data.</param>
        /// <returns>ManualPositionAdjustments with our data</returns>
        public ManualPositionAdjustments GetManualPositionAdjustments(TemplateAttrTypeCode boundingBoxTypeHeight, TemplateAttrTypeCode boundingBoxTypeVertPos)
        {
            float fontHeight = float.Parse(GetValueFromRowSet((int)boundingBoxTypeHeight).ToString());
            int fontVerticalPosition = int.Parse(GetValueFromRowSet((int)boundingBoxTypeVertPos).ToString());

            return new ManualPositionAdjustments(fontHeight, fontVerticalPosition);
        }

        /// <summary>
        /// Initializes column names in base class.
        /// </summary>
        private void Init()
        {
            this.FilterColumnName = "template_attr_type_code";
            this.DataColumnName = "template_attr_data";
        }

        #region Constructors
        public TemplateAttrDataSet() : base() { Init(); }
        public TemplateAttrDataSet(string sqlCommand) : base(sqlCommand) { Init(); }
        #endregion

    }
}
